apiVersion: batch/v1
kind: CronJob
metadata:
  name: mysql-backup
  namespace: default
spec:
  schedule: "*/5 * * * *" # Every five minutes
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: backup
              image: alpine:latest
              env:
                - name: MYSQL_HOST
                  value: "mysql-db.default.svc.cluster.local"
                - name: MYSQL_USER
                  value: "root"
                - name: MYSQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: secret-mysql
                      key: mysql-root-password
              volumeMounts:
                - name: ssh-key
                  mountPath: /secrets/ssh
                  readOnly: true
                - name: tmp
                  mountPath: /backup
              command: ["/bin/sh", "-c"]
              args:
                - |
                  mkdir -p /root/.ssh
                  cp /secrets/ssh/id_rsa /root/.ssh/id_rsa
                  chmod 600 /root/.ssh/id_rsa

                  apk add --no-cache mysql-client openssh
                  TIMESTAMP=$(date +%F_%H-%M)
                  BACKUP_FILE="/backup/db_backup_$TIMESTAMP.sql"
                  mysqldump --ssl-mode=DISABLED -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD --all-databases > $BACKUP_FILE

                  ssh -o StrictHostKeyChecking=no adminuser@158.158.32.28 "mkdir -p /home/adminuser/backups/"
                  scp -o StrictHostKeyChecking=no $BACKUP_FILE adminuser@158.158.32.28:/home/adminuser/backups/

                  # Delete backups older than 15 minutes
                  ssh -o StrictHostKeyChecking=no adminuser@158.158.32.28 "find /home/adminuser/backups -type f -name "*.sql" -mmin +15 -delete"

                  echo "Backup completed and transferred successfully."
          restartPolicy: OnFailure
          volumes:
            - name: ssh-key
              secret:
                secretName: ssh-key-secret
            - name: tmp
              emptyDir: {}
