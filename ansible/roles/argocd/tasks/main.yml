
- name: Create ArgoCD Namespace
  shell: |
    kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -

- name: Download ArgoCD manifest
  get_url:
    url: "https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml"
    dest: "/tmp/argocd-install.yaml"
    mode: "0644"

- name: Apply ArgoCD manifest
  shell: |
    kubectl apply -f /tmp/argocd-install.yaml -n argocd

- name: Copy ingress
  copy:
    src: argocd-ingress.yml
    dest: /tmp/argocd-ingress.yml
    owner: root # Change owner if needed
    group: root # Change group if needed
    mode: "0644" # File permissions

- name: Apply ArgoCD ingress
  shell: |
    kubectl apply -f /tmp/argocd-ingress.yml -n argocd

- name: Copy example-app
  copy:
    src: app.yml
    dest: /tmp/app.yml
    owner: root # Change owner if needed
    group: root # Change group if needed
    mode: "0644" # File permissions

- name: Apply ArgoCD example app
  shell: |
    kubectl apply -f /tmp/app.yml -n argocd

- name: Prepare the /mnt/data folder on the MySQL node
  become: true
  ansible.builtin.file:
    path: /mnt/data
    state: directory
    owner: 1001
    group: 1001
    mode: '0755'
  register: mkdir_result

- name: Copy mysql-storage
  copy:
    src: mysql-storage.yml
    dest: /tmp/mysql-storage.yml
    owner: root
    group: root
    mode: "0644"

- name: Apply MySQL storage
  shell: |
    kubectl apply -f /tmp/mysql-storage.yml

- name: Copy mysql-pvc
  copy:
    src: mysql-pvc.yml
    dest: /tmp/mysql-pvc.yml
    owner: root
    group: root
    mode: "0644"

- name: Apply MySQL PVC
  shell: |
    kubectl apply -f /tmp/mysql-pvc.yml

- name: Wait for argocd-server to be ready
  shell: kubectl wait pod --all --for=condition=Ready --namespace=argocd --timeout=600s

- name: Save argocd admin password
  shell: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
  register: argocd_admin_password

- name: Output argocd admin password
  debug:
    msg: "{{ argocd_admin_password.stdout }}"

- name: Copy mysql-app
  copy:
    src: mysql-app.yml
    dest: /tmp/mysql-app.yml
    owner: root
    group: root
    mode: "0644"

- name: Apply MySQL app
  shell: |
    kubectl apply -f /tmp/mysql-app.yml -n argocd
