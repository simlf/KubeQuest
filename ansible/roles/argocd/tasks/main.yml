- name: Create ArgoCD Namespace
  shell: |
    kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -

- name: Copy secret
  copy:
    src: argocd-secret.yml
    dest: /tmp/argocd-secret.yml
    owner: root # Change owner if needed
    group: root # Change group if needed
    mode: "0644" # File permissions

- name: Apply ArgoCD secret
  shell: |
    kubectl apply -f /tmp/argocd-secret.yml -n argocd

- name: Copy ArgoCD install manifest
  copy:
    src: argocd-install.yml
    dest: /tmp/argocd-install.yaml
    owner: root # Change owner if needed
    group: root # Change group if needed
    mode: "0644" # File permissions

- name: Apply ArgoCD manifest
  shell: |
    kubectl apply -f /tmp/argocd-install.yaml -n argocd

- name: Copy ingress
  copy:
    src: argocd-ingress.yml
    dest: /tmp/argocd-ingress.yml
    owner: root # Change owner if needed
    group: root # Change group if needed
    mode: "0644" # File permissions

- name: Apply ArgoCD ingress
  shell: |
    kubectl apply -f /tmp/argocd-ingress.yml -n argocd

- name: Prepare the /mnt/data folder on the MySQL node
  become: true
  ansible.builtin.file:
    path: /mnt/data
    state: directory
    owner: 1001
    group: 1001
    mode: "0755"
  register: mkdir_result

- name: Wait for argocd-server to be ready
  shell: kubectl wait pod --all --for=condition=Ready --namespace=argocd --timeout=600s

- name: Save argocd admin password
  shell: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
  register: argocd_admin_password

- name: Output argocd admin password
  debug:
    msg: "{{ argocd_admin_password.stdout }}"

- name: Copy argocd app
  copy:
    src: argocd-app.yml
    dest: /tmp/argocd-app.yml
    owner: root # Change owner if needed
    group: root # Change group if needed
    mode: "0644" # File permissions

- name: Apply ArgoCD app
  shell: |
    kubectl apply -f /tmp/argocd-app.yml -n argocd
